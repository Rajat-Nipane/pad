-- SELECT name FROM products;
-- SELECT id AS products_id FROM products;
-- SELECT * FROM products WHERE id = 2;



--Where clause with !=0, and or OR
-- SELECT id,name FROM products WHERE id =3;
-- SELECT id,name FROM products WHERE inventory = 0;
-- select * from products;
-- SELECT * FROM products WHERE name = 'TV'; single quote for varchar or text
-- SELECT * FROM products WHERE price < 1000
-- SELECT * FROM products WHERE inventory != 0; or
-- SELECT * FROM products WHERE inventory <> 0;

-- AND Operator
-- SELECT * FROM products WHERE inventory > 0 AND price > 1000;

-- IN operator
-- SELECT * FROM products WHERE id = 1 OR id =2 or id=3; or
-- SELECT * FROM products WHERE id IN (1,2,3);

--LIKE operator
-- SELECT * FROM products WHERE name LIKE '%TV%';
-- SELECT * FROM products WHERE name NOT LIKE '%TV%';
-- SELECT * FROM products WHERE name LIKE '%en%';

-- -- ORDER BY
-- SELECT * FROM products WHERE name LIKE '%en%' order by price;
-- SELECT * FROM products ORDER BY inventory DESC, price DESC;

-- -- LIMIT -- give limited results.
-- SELECT * FROM products WHERE price > 10 LIMIT 2;

-- -- -OFFSET skip first given records
-- SELECT * FROM products ORDER BY id LIMIT 5 OFFSET 2;

-- -INSERT
-- INSERT INTO products (name,price,inventory) VALUES ('airpods',250,10);

-- return this again to frontend in postgre
-- INSERT INTO products (name,price,inventory) VALUES ('cars',25,10) returning *;
-- INSERT INTO products (name,price,inventory) VALUES ('laptop',2500,10),('monitor',200,5) returning *;
-- SELECT * FROM products;


--DELETE 
-- DELETE FROM products WHERE inventory=0 RETURNING *;

--UPDATE 
-- UPDATE products SET name='tv remote', price=50 WHERE id=3 Returning *;

-- UPDATE products SET is_sale=true;
-- select * from products;